openapi: 3.0.3

info:
  title: MyPlanning API
  description: Voi√ßi l'API pour l'application MyPlanning
  version: 1.0.0

servers:
  - url: https://localhost:8081/
    description: where you can use the api

tags:
  - name: "Agenda API"
  - name: "Auth API"

paths:

  /agenda:
    get:
      tags:
        - "Agenda API"
      summary: Get all agendas
      description: This returns all the agendas
      operationId: find
      responses:
        "200":
          description: returned a value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgendaDTO"
        "400":
          description: BAD_REQUEST
        "401":
          description: UNAUTHORIZE
    post:
      tags:
        - "Agenda API"
      summary: Create an agenda
      description: This returns the created agenda
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgendaDTO'
      responses:
        "200":
          description: returned a value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgendaDTO"
        "400":
          description: BAD_REQUEST
        "401":
          description: UNAUTHORIZE

  /agenda/{id}:
    get:
      tags:
        - "Agenda API"
      summary: Get agenda
      description: This returns an agenda from an id
      operationId: findById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the user to get
      responses:
        "200":
          description: returned a value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgendaDTO"
        "400":
          description: BAD_REQUEST
        "401":
          description: UNAUTHORIZE
    delete:
      tags:
        - "Agenda API"
      summary: Delete an agenda
      description: This returns true or false if the agenda has been deleted
      operationId: delete
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the user to get
      responses:
        "200":
          description: returned a value
          content:
            application/json:
              schema:
                type: boolean
        "400":
          description: BAD_REQUEST
        "401":
          description: UNAUTHORIZE

  /agenda/user/{id}:
    get:
      tags:
        - "Agenda API"
      summary: Get agendas by user
      description: This returns an agenda from an id
      operationId: findByUser
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the user to get
      responses:
        "200":
          description: returned a value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgendaDTO"
        "400":
          description: BAD_REQUEST
        "401":
          description: UNAUTHORIZE

  /agenda/shared/user/{id}:
    get:
      tags:
        - "Agenda API"
      summary: Get sharedAgendas by user
      description: This returns shared agendas from a user id
      operationId: findSharedAgendasByUser
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the user to get
      responses:
        "200":
          description: returned a value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgendaDTO"
        "400":
          description: BAD_REQUEST
        "401":
          description: UNAUTHORIZE

  /auth/login:
    post:
      tags:
        - "Auth API"
      summary: Login
      description: This will connect the user and generate a jwt token
      operationId: login
      responses:
        "200":
          description: returned a value
          content:
            application/json:
              schema:
                type: string
        "400":
          description: BAD_REQUEST
        "401":
          description: UNAUTHORIZE

components:
  schemas:

    AgendaDTO:
      description: This is the DTO for the agenda
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        user:
          type: object
          $ref: "#/components/schemas/UserLightDTO"
        team:
          type: object
          $ref: '#/components/schemas/TeamLightDTO'
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventLightDTO'
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleLightDTO'
        sharedEvents:
          type: array
          items:
            $ref: '#/components/schemas/EventLightDTO'
        sharedUsers:
          type: array
          items:
            $ref: '#/components/schemas/UserLightDTO'
        sharedTeams:
          type: array
          items:
            $ref: '#/components/schemas/TeamLightDTO'

    # LightDTO
    AgendaLightDTO:
      description: This is the DTO for the agenda
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    AuthorityLightDTO:
      description: This is the DTO for the authority
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    CardLightDTO:
      description: This is the DTO for the card
      type: object
      properties:
        id:
          type: integer
          format: int64
        recap:
          type: boolean
        size:
          type: string
        type:
          type: string
    CommentLightDTO:
      description: This is the DTO for the comment
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
    EventLightDTO:
      description: This is the DTO for the event
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        isADayOff:
          type: boolean
        isPrivate:
          type: boolean
        statusDisplayed:
          type: string
        eventType:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        meetingUrl:
          type: string
        report:
          type: string
    RoleLightDTO:
      description: This is the DTO for the role
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        authorities:
          items:
            $ref: '#/components/schemas/AuthorityLightDTO'
    ScheduleLightDTO:
      description: This is the DTO for the schedule
      type: object
      properties:
        id:
          type: integer
          format: int64
        day:
          type: integer
        startHour:
          type: string
          format: date-time
        endHour:
          type: string
          format: date-time
        hasBreak:
          type: string
        startBreak:
          type: string
          format: date-time
        endBreak:
          type: string
          format: date-time
    TeamLightDTO:
      description: This is the DTO for the team
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    UserLightDTO:
      description: This is the DTO for the user
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
          format: password